@model Recrutement_plateforme.Models.OffresModels.Job

@{
    ViewData["Title"] = "Create";
}

<h1>Create Job</h1>

<hr />

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <form asp-action="Create" class="mt-3">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Title" class="control-label">Job Title:</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Description" class="control-label">Description:</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="CompetencesRequired" class="control-label">Competences Required:</label>
                    <input asp-for="CompetencesRequired" class="form-control" />
                    <span asp-validation-for="CompetencesRequired" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Responsibilities" class="control-label">Responsibilities:</label>
                    <input asp-for="Responsibilities" class="form-control" />
                    <span asp-validation-for="Responsibilities" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Salary" class="control-label">Salary:</label>
                    <input asp-for="Salary" class="form-control" />
                    <span asp-validation-for="Salary" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PublishedAt" class="control-label">Published At:</label>
                    <input asp-for="PublishedAt" class="form-control" />
                    <span asp-validation-for="PublishedAt" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RecruteurId" class="control-label">Recruteur:</label>
                    <select asp-for="RecruteurId" class="form-control" asp-items="ViewBag.RecruteurId"></select>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" onclick="showSuccessAlert()" />
                </div>
            </form>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-6">
            <a href="@Url.Action("Welcome", "Recruteurs")" class="btn btn-primary">Back to Dashboard</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    function showSuccessAlert() {
        // Simulate job creation success
        // You should replace this with your actual logic to check if the job was added successfully
        var jobAddedSuccessfully = true;

        if (jobAddedSuccessfully) {
            alert("Job added successfully!");
        }
    }
    document.addEventListener("DOMContentLoaded", function () {
        // Check for toast message in TempData
        var toastMessage = '@TempData["ToastMessage"]';
        var toastType = '@TempData["ToastType"]';

        if (toastMessage && toastType) {
            Toastify({
                text: toastMessage,
                duration: 5000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: toastType === "success" ? "#4CAF50" : "#f44336"
            }).showToast();
        }
    });
</script>
